use crate::OVERLAY_BYTES;
use image::{imageops, Rgba, RgbaImage};

const SIMPLE_VALID_PNG: &str = "0x89504e470d0a1a0a0000000d49484452000001a4000001a408060000007e4c513500001a4f494441547801edc003a0245996c6f1ff77ee8dc8cca7724b63ae6ddbb66ddbb66ddbb66d698c9e964aaf9e323322eef976b76a7aa6873b6bd5af7ec96b7f93b9eaaaabaebaeaaaff5e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaea05faa4dffe10fe237dc96b7f13ff913ee9b73f84ff485ff2dadfc45557fd37a172d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555ff6e6ffc7aafce8be2937ee343f88f645e34e2aaabfec7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555ff6e37dd7823ff91bee9ab3e9f17853ee6d379517cc96b7f13575df53f1c95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaefa1fe7433ee6d3b9eaaaff67a85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d57f99f77fcf77e23fd21d77dec98be2937ee34378517cc96b7f13575df5df84ca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555ff0f7dd26f7f082f8a377ebd57e745f1eddffb235c75d555ff2e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeabfcc97bcf63771d555573d5f54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaea05fae5dff87daebaeaaaff1254aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaefa3fe4937efb437851bcf1ebbd3a2f8a9b6ebc91ff489ff4bd1fc28be24b5efb9bb8eaaaff67a85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3ff425affd4de6aaabfe87fba4dffe10ae7a5e5ff2dadfc455fff93ee9b73f84ff485ff2dadfc455cf83ca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a3f23fdc27fdf687f03fd997bcf63771d5f3faa4dffe10fe237df8a3df8017c5ab9d38ceff27eff2db1fc27fa42f79ed6fe2ff934ffaed0fe13fd243bf6d8717c5277dc087f0a2f892d7fe26fe1fa172d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffdd097bcf63799ff069ff4db1fc28b62b5dce5bfc3effdfe1ff1a27883377813fe237dc96b7f13ff937dd26f7f082f8a0f7ff41bf0a278b513c7f9eff0860fe9f8ffe4579f3ef2a278973ffa315e145ff2dadfc47f874ffaed0fe13fd2cb9ffe3a5e147f7eee2378513cecd18fe245f1d4273c91ff485ff2dadfc4ff0154aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95ff609ff4db1fc28be2d77eed97f89fec355efd557851ac96bbbc287eeff7ff8817c51bbcc19bf01fe94b5efb9b78517cd26f7f082f8a0f7ff41bf0a278b513c7f9eff0860fe9b8ea79bde1433a5e143fc43bf0a27897dffe10fe3bbcfce9afe345f1d21bafcf7fa43fe7bfc7fbdff2785e149ff4db8fe145f125affd4dfc0f46e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefba12f79ed6f32ff813ee9b73f8417c56ab9cb55ff76bff7fb7fc48be20ddee04df88ff443aff20efc7778c387745cf53fc7a91ffc415e142f7ffaeb7851bcf4c6ebf3dfe1db6f7b0c573daf2f79ed6fe2bf0195abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaff95dee00dde84ff0eeff2473fc67f8b3fe2aaff85fefcdc47f0a2f8735e34ef7fcbe3f9eff08aaffeaafc5ff0a7bfff87fc0f46e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9ea7f94f9e2382f8aebaf7f10ff9fbcd77b7d32ff917ef227bf85ff0efbfb177951bcd77b7d32ff917ef227bf85ff0efbfb177951dc7df733f8bfe04f7fff0f79517c3ce645f1e58817c52bbefaabf2a238ffaeefca8be2d40f7e082f8a2f79ed6fe23f1095abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaffd3eebefb195cf53fc7dd773f83ff4feebefb19bc28deff96c7f37fc12bbefaabf2a2f85d5e8d17c52bf2aafc473af5833fc8ff6054aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95ff26bff7fb7fc48be2355efd55b8ea79dd7df733f88ff443aff20efc7778973ffa315e143ff993dfc27fa4b77ddb0fe245f1933ff92dfc77f8c99ffc16fe23bdeddb7e102f8a9ffcc96fe1aa7fbbf3e7cef3a2d8dbbdc48b62e7f8315e14a74e9fe24571fe5ddf9517c5a91ffc41fe1b50b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54fe837dc96b7f132f8a37788337e145b15aeef2ffc96ab9cb7fa4f9e238ff93fdd0abbc032f8a77f9a31fe345f1c847be342f8a9ffcc96fe13fd2939ef4d7bc287ee855de8117c5bbfcd18ff1a278e4235f9a17c54ffee4b7f01fe9494ffa6bae7a5e7bbb977851ec1c3fc68b626ff7122f8a53a74ff1a238f5833fc8ff6054aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95ffe17eeff7ff8817c56bbcfaab70d5ff5d3ff42aefc08be25dfee8c7f8eff043aff20efc47faa15779075e14eff2473fc67f871f7a9577e045f12e7ff463fc7fb273fc182f8abddd4bbc28768e1fe33fd20fbdca3bf0a278973ffa31fe1b50b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54fe9b7cc96b7f132f8a37788337e145f16bbff64bbc285ee3d55f85abfee778c38774fc473aff9077e5ff93f30f7957fe47fb23fe5b7cfb6d8fe1bfc3a9d3a778519c3a7d8aff0eeff2473fc68be24b5efb9bf86f40e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51f91fee4b5efb9b7851bcc11bbc092f8ad57297abaefad5a78fbc28dee58f7e8cff0b7ee855de8117c51b3ea4e3ff93f3effaaebc287ef5e9232f8a77f9a31fe3aa7f332a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fcaff115ff2dadfc48b62be38ce8be2d77eed977851bcc6abbf0a57fdeff3860fe978519c7fc8bb72d5ff3eef7fcbe379519cfac1c7f01fe9fcbbbe2bff917ef5e9232f8a77f9a31fe345f125affd4dfc0f46e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51f97fe64b5efb9b7851bcc11bbc09ff917eedd77e8917c56bbcfaabf01fe9d77eed977851bcc11bbc09ff2dfe88abfe0f7bff5b1ecf7fa4bf3efa755e147f7eee23f88ff425affd4dbc284efde08770d5bf1995abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5ff994ffaed0fe145f16bbff64bbc285ee3d55f85ffc9dee00dde8417c5cbddfc55fc4ff692c75e8f17c577fdfd4bf2a278f2939fcc8be2118f78042f8af779f1bfe5bfc377fdfd4bf2a278f2939fcc8be2118f78042f8af779f1bfe545f1ed7fff185e14ef7fcbe37951bcf4c6ebf3a278e95b1ecf8be2af8f7e9d17c527fdf687f0a2f892d7fe265e149ff4db1fc28be2875ee51d7851bccb1ffd18ff0750b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54fe8ff8a4dffe105e14bff66bbfc48be2355efd55f8eff07bbfff47bc28dee00dde84ff487f71fbc7f0a278b99bbf8aff0b767ee4a5f8ff64e7475e8affc9befdb6c7f0a278ff5b1ecf7fa497de787d5e24a7bf8e17c527fdf687f01fe95dfee8c7f87f84ca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a3f23fdc27fdf687f0a2f8b55ffb255e14aff1eaafc2ff646ff0066fc28be2e56efe2a5e142f79ecf5f88ff45d7fff92bc281e76e63df88ff4b7fcc7da7ba7bfe145f2e98fe045f1b7977e83ffc9f6dee96f78917cfa237851fceda5dfe03fd20fbdca3bf0a278973f7a0cff17fcd0abbc03ff1ddee5b73f8417c597bcf637f1df80ca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a3f27fc46bbcfaab70d5ff1c4f3dfb7dfcc7fa3efe27fb8bdb3f86ff4ffee2f68fe17fb21f7a9577e045f1860fe9f88f74ea077f90ff487f70719717c5ab9d38ceff0154aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaefa4ff0555ff555fc477af3377f735e143ffff33fcf8be2118f78042f8aaffaaaafe245f1e66ffee6fc77f8f99fff795e148f78c42378517cd5577d152f8a377ff337e745f188473c8217c51f5cdce53fd2bbfcd18ff122f923fe477bb513c7f97f84ca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a3f27fc4effdfe1ff1a2788d577f15aefabfebcddffccd7951bcf99bbf39ff17bcf99bbf392f8a377ff337e77fb2af7fc2aff11fe9fd6f793cff1dfefae8d77951bccb1f7d04ff1dbee4b5bf89ffc1a85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2affc37dc96b7f132f8a37788337e145f16bbff64bbc285ee3d55f85ff48bff7fb7fc455fffbfcfccfff3cff17bcf99bbf39ff93bddccd5fc58be22f6eff18fe3bfcf5d1aff3a2f8f3731fc18be24b5efb9bb8ea7950b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54fe8ff892d7fe265e146ff0066fc2ff057f71fbc7f0a2f88bdbb9eaf9f8f99fff795e146ffee66fceff053ffff33fcf8be2cddffccdf9eff017b77f0cff91befdb6c7f0dfe14b5efb9bb8eadf8cca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a372d555575d75d555fffda85c75d555575d75d57f3f2a575d75d555575df5df8fca55575d75d55557fdf7a3f2ffcc97bcf637f13fd927fdf687f0a2f8a15779075e146ff8908eff48a77ef007b9eaaaff683ff42aefc08be25dfee8c778517cc96b7f1357fdaf43e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaff041ff3311fc37fa48ff9988fe1bfc3c77cccc7f0ffc9c77cccc7f01fe9875ee51db8eaaa171195abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabfe137cc96b7f13ff937dd26f7f082f8a1f7a9577e03fd2bbfcd18ff1a2f892d7fe26fe3b7cd26f7f082f8a1f7a9577e0aaabfe8351b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7e54aebaeaaaabaebaeabf1f95abaebaeaaaabaefaef47e5aaabaebaeaaaabfefb51b9eaaaabaebaeaaaff7efc23efcf086254e854280000000049454e44ae426082";

fn hex_to_bytes(hex: &str) -> Vec<u8> {
    let hex = hex.trim_start_matches("0x");
    // Handle odd-length hex strings by padding with a leading zero
    let hex = if hex.len() % 2 == 1 {
        format!("0{}", hex)
    } else {
        hex.to_string()
    };

    (0..hex.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hex[i..i + 2], 16).unwrap())
        .collect()
}

pub fn generate_test_image() -> Result<(), Box<dyn std::error::Error>> {
    // Create a 420x420 base image with a nice gradient
    let mut base = RgbaImage::new(420, 420);

    let base_png_data = hex_to_bytes(SIMPLE_VALID_PNG);

    // Decode both images
    let mut base: RgbaImage = image::load_from_memory(&base_png_data)?.to_rgba8();
    // Load the overlay
    let overlay: RgbaImage = image::load_from_memory(OVERLAY_BYTES)?.to_rgba8();

    // Get overlay dimensions
    let (overlay_width, overlay_height) = overlay.dimensions();

    // Center the overlay on the base image
    let x_offset = (420 - overlay_width) / 2;
    let y_offset = (420 - overlay_height) / 2;

    // Composite the overlay onto the base at the center
    imageops::overlay(&mut base, &overlay, x_offset as i64, y_offset as i64);

    // Save the result
    let output_path = "generated_image_420x420.png";
    base.save(output_path)?;

    println!("✅ Generated 420x420 image saved to: {}", output_path);
    println!("📐 Base image size: 420x420");
    println!("📐 Overlay size: {}x{}", overlay_width, overlay_height);
    println!("📍 Overlay position: ({}, {})", x_offset, y_offset);

    Ok(())
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn create_test_image() {
        let result = generate_test_image();
        assert!(
            result.is_ok(),
            "Image generation should succeed: {:?}",
            result.err()
        );

        // Verify the file was created
        assert!(
            std::path::Path::new("generated_image_420x420.png").exists(),
            "Output file should exist"
        );

        println!("🎉 Image generation test passed!");
    }
}
